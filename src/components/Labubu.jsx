/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Sledgely (https://sketchfab.com/Sledgely)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/labubu-fbe43a040f8b4c589c14509b23d40c78
Title: LABUBU
*/

import React, { useRef, useEffect } from 'react'
import { useGLTF } from '@react-three/drei'
import { gsap } from 'gsap'

export function Labubu({ windowWidth, isOpen, ...props }) {
  const { nodes, materials } = useGLTF('/models/labubu.glb')
  const groupRef = useRef()
  const rotationTween = useRef(null)

  useEffect(() => {
    // Initial slow rotation
    rotationTween.current = gsap.to(groupRef.current.rotation, {
      y: Math.PI * 2,
      duration: 12,
      ease: "linear",
      repeat: -1
    })

    return () => {
      if (rotationTween.current) {
        rotationTween.current.kill()
      }
    }
  }, [])

  const handleMouseEnter = () => {
    if (rotationTween.current) {
      rotationTween.current.kill()
    }

    // Faster rotation on hover with smooth acceleration
    gsap.to(groupRef.current.rotation, {
      y: groupRef.current.rotation.y + Math.PI * 2,
      duration: 1,
      ease: "power2.in",
      onComplete: () => {
        rotationTween.current = gsap.to(groupRef.current.rotation, {
          y: "+=6.28319", // 2π
          duration: 0.5,
          ease: "none",
          repeat: -1
        })
      }
    })
  }

  const handleMouseLeave = () => {
    if (rotationTween.current) {
      rotationTween.current.kill()
    }

    // Smooth deceleration to slow rotation
    gsap.to(groupRef.current.rotation, {
      y: groupRef.current.rotation.y + Math.PI * 2,
      duration: 1,
      ease: "power2.out",
      onComplete: () => {
        rotationTween.current = gsap.to(groupRef.current.rotation, {
          y: "+=6.28319", // 2π
          duration: 12,
          ease: "linear",
          repeat: -1
        })
      }
    })
  }

  return (
    <group
      ref={groupRef}
      {...props}
      dispose={null}
      onPointerEnter={handleMouseEnter}
      onPointerLeave={handleMouseLeave}
    >
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_2.geometry}
          material={materials.NurbsPath}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_3.geometry}
          material={materials.body}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_4.geometry}
          material={materials.body_outline}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_5.geometry}
          material={materials.ears}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_6.geometry}
          material={materials.eyes}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_7.geometry}
          material={materials.foot}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_8.geometry}
          material={materials.hand}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_9.geometry}
          material={materials.in_head}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_10.geometry}
          material={materials.nose}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_11.geometry}
          material={materials.tooth}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/models/labubu.glb')
